# Server Configuration
# Backend server port. Frontend proxy points to this (see frontend/package.json).
PORT=8024
NODE_ENV=development

# Gemini AI Configuration
# Get from Google AI Studio. See README: Google Gemini AI API Key.
GEMINI_API_KEY=your_gemini_api_key_here

# Telegram Bot Configuration
# Create a bot with @BotFather, paste the token below.
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
# Get chat id by messaging the bot and visiting https://api.telegram.org/bot<token>/getUpdates
DOCTOR_TELEGRAM_CHAT_ID=your_doctor_telegram_chat_id_here

# Google Calendar Configuration
# Option A: Service Account JSON string (recommended)
# Note: Share the doctor's calendar with the service account email (Make changes to events).
GOOGLE_CALENDAR_CREDENTIALS={"type":"service_account","project_id":"your_project_id","private_key_id":"your_private_key_id","private_key":"-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY\n-----END PRIVATE KEY-----\n","client_email":"your_service_account_email@your_project.iam.gserviceaccount.com","client_id":"your_client_id","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/your_service_account_email%40your_project.iam.gserviceaccount.com"}

# Option B: OAuth2 JSON string (only if not using service account)
# GOOGLE_CALENDAR_CREDENTIALS={"client_id":"...","client_secret":"...","redirect_uri":"...","refresh_token":"..."}

# Doctor Configuration
# Calendar ID to create events on (usually the doctor's email address)
DOCTOR_EMAIL=doctor@example.com
